import{_ as e,c as t,o as a,ax as r}from"./chunks/framework.DSrT5G2K.js";const f=JSON.parse('{"title":"base","description":"","frontmatter":{"title":"base"},"headers":[],"relativePath":"types/base/index.md","filePath":"types/base/index.md","lastUpdated":1752224702000}'),o={name:"types/base/index.md"},l=r('<h1 id="module-base" tabindex="-1">Module: base <a class="header-anchor" href="#module-base" aria-label="Permalink to &quot;Module: base&quot;">​</a></h1><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="type-aliases" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h3><ul><li><a href="#generalfunction">GeneralFunction</a></li><li><a href="#plainobject">PlainObject</a></li><li><a href="#primitivetype">PrimitiveType</a></li></ul><h2 id="type-aliases-1" tabindex="-1">Type Aliases <a class="header-anchor" href="#type-aliases-1" aria-label="Permalink to &quot;Type Aliases&quot;">​</a></h2><h3 id="generalfunction" tabindex="-1">GeneralFunction <a class="header-anchor" href="#generalfunction" aria-label="Permalink to &quot;GeneralFunction&quot;">​</a></h3><p>Ƭ <strong>GeneralFunction</strong>&lt;<code>T</code>&gt;: (...<code>args</code>: <code>any</code>[]) =&gt; <code>T</code></p><h4 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><h4 id="type-declaration" tabindex="-1">Type declaration <a class="header-anchor" href="#type-declaration" aria-label="Permalink to &quot;Type declaration&quot;">​</a></h4><p>▸ (<code>...args</code>): <code>T</code></p><p>通用的函数类型</p><h5 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h5><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>...args</code></td><td style="text-align:left;"><code>any</code>[]</td></tr></tbody></table><h5 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h5><p><code>T</code></p><p>Defined in <a href="https://github.com/jview-design/jview/blob/dfe9002/packages/types/src/base.ts#L13" target="_blank" rel="noreferrer">base.ts:13</a></p><hr><h3 id="plainobject" tabindex="-1">PlainObject <a class="header-anchor" href="#plainobject" aria-label="Permalink to &quot;PlainObject&quot;">​</a></h3><p>Ƭ <strong>PlainObject</strong>&lt;<code>K</code>, <code>V</code>&gt;: <code>Record</code>&lt;<code>K</code>, <code>V</code>&gt;</p><p>普通对象类型</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table tabindex="0"><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>K</code></td><td style="text-align:left;">extends <code>IndexType</code> = <code>string</code></td></tr><tr><td style="text-align:left;"><code>V</code></td><td style="text-align:left;"><code>unknown</code></td></tr></tbody></table><p>Defined in <a href="https://github.com/jview-design/jview/blob/dfe9002/packages/types/src/base.ts#L8" target="_blank" rel="noreferrer">base.ts:8</a></p><hr><h3 id="primitivetype" tabindex="-1">PrimitiveType <a class="header-anchor" href="#primitivetype" aria-label="Permalink to &quot;PrimitiveType&quot;">​</a></h3><p>Ƭ <strong>PrimitiveType</strong>: <code>number</code> | <code>string</code> | <code>boolean</code> | <code>undefined</code> | <code>null</code> | <code>symbol</code></p><p>Defined in <a href="https://github.com/jview-design/jview/blob/dfe9002/packages/types/src/base.ts#L15" target="_blank" rel="noreferrer">base.ts:15</a></p>',28),d=[l];function i(n,s,c,h,p,b){return a(),t("div",null,d)}const u=e(o,[["render",i]]);export{f as __pageData,u as default};
