import{_ as d,o as t,c as e,Q as o}from"./chunks/framework.bf0d9ef3.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"components/grid/col-props.md","filePath":"components/grid/col-props.md","lastUpdated":1709033088000}'),r={name:"components/grid/col-props.md"},c=o("<table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>默认值</th><th>必填</th></tr></thead><tbody><tr><td>span</td><td>栅格格数，为<code>0</code>时相当于<code>display: none</code></td><td><code>number</code></td><td>无</td><td>否</td></tr><tr><td>offset</td><td>栅格左侧偏移格数</td><td><code>number</code></td><td><code>0</code></td><td>否</td></tr><tr><td>order</td><td><code>flex</code>布局排序序号，从小到大对应从左到右</td><td><code>number</code></td><td>无</td><td>否</td></tr><tr><td>push</td><td>格子往后推，对应<code>left</code>属性控制，不会影响其他格子</td><td><code>number</code></td><td>无</td><td>否</td></tr><tr><td>pull</td><td>格子往前拉，对应<code>right</code>属性控制，不会影响其他格子</td><td><code>number</code></td><td>无</td><td>否</td></tr><tr><td>xs</td><td>屏幕宽度<code>&lt; 576px</code>的响应式配置，值可以是栅格数或一个包含其他属性（如<code>span</code>, <code>offset</code>等）的对象</td><td><code>number</code> | <code>{ offset: number; order: number; pull: number; push: number; span: number }</code></td><td>无</td><td>否</td></tr><tr><td>sm</td><td>屏幕宽度<code>&gt;= 576px</code>的响应式配置，值可以是栅格数或一个包含其他属性的对象</td><td><code>number</code> | <code>{ offset: number; order: number; pull: number; push: number; span: number }</code></td><td>无</td><td>否</td></tr><tr><td>md</td><td>屏幕宽度<code>&gt;= 768px</code>的响应式配置，值可以是栅格数或一个包含其他属性的对象</td><td><code>number</code> | <code>{ offset: number; order: number; pull: number; push: number; span: number }</code></td><td>无</td><td>否</td></tr><tr><td>lg</td><td>屏幕宽度<code>&gt;= 992px</code>的响应式配置，值可以是栅格数或一个包含其他属性的对象</td><td><code>number</code> | <code>{ offset: number; order: number; pull: number; push: number; span: number }</code></td><td>无</td><td>否</td></tr><tr><td>xl</td><td>屏幕宽度<code>&gt;= 1200px</code>的响应式配置，值可以是栅格数或一个包含其他属性的对象</td><td><code>number</code> | <code>{ offset: number; order: number; pull: number; push: number; span: number }</code></td><td>无</td><td>否</td></tr><tr><td>xxl</td><td>屏幕宽度<code>&gt;= 1600px</code>的响应式配置，值可以是栅格数或一个包含其他属性的对象</td><td><code>number</code> | <code>{ offset: number; order: number; pull: number; push: number; span: number }</code></td><td>无</td><td>否</td></tr></tbody></table>",1),n=[c];function u(m,s,p,b,a,l){return t(),e("div",null,n)}const h=d(r,[["render",u]]);export{f as __pageData,h as default};
